=begin
#ShipEngine API

#ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics. Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 

The version of the OpenAPI document: 1.1.202006302006
Contact: sales@shipengine.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'date'

module ShipEngine
  class SmartPostHub
    NONE = "none".freeze
    ALLENTOWN_PA = "allentown_pa".freeze
    ATLANTA_GA = "atlanta_ga".freeze
    BALTIMORE_MD = "baltimore_md".freeze
    CHARLOTTE_NC = "charlotte_nc".freeze
    CHINO_CA = "chino_ca".freeze
    DALLAS_TX = "dallas_tx".freeze
    DENVER_CO = "denver_co".freeze
    DETROIT_MI = "detroit_mi".freeze
    EDISON_NJ = "edison_nj".freeze
    GROVE_CITY_OH = "grove_city_oh".freeze
    GROVEPORT_OH = "groveport_oh".freeze
    HOUSTON_TX = "houston_tx".freeze
    INDIANAPOLIS_IN = "indianapolis_in".freeze
    KANSAS_CITY_KS = "kansas_city_ks".freeze
    LOS_ANGELES_CA = "los_angeles_ca".freeze
    MARTINSBURG_WV = "martinsburg_wv".freeze
    MEMPHIS_TN = "memphis_tn".freeze
    MINNEAPOLIS_MN = "minneapolis_mn".freeze
    NEW_BERLIN_WI = "new_berlin_wi".freeze
    NORTHBOROUGH_MA = "northborough_ma".freeze
    ORLANDO_FL = "orlando_fl".freeze
    PHONEIX_AZ = "phoneix_az".freeze
    PITTSBURGH_PA = "pittsburgh_pa".freeze
    RENO_NV = "reno_nv".freeze
    SACRAMENTO_CA = "sacramento_ca".freeze
    SALT_LAKE_CITY_UT = "salt_lake_city_ut".freeze
    SEATTLE_WA = "seattle_wa".freeze
    ST_LOUIS_MO = "st_louis_mo".freeze
    WINDSOR_CT = "windsor_ct".freeze
    NEWARK_NY = "newark_ny".freeze
    SOUTH_BRUNSWICK_NJ = "south_brunswick_nj".freeze
    SCRANTON_PA = "scranton_pa".freeze
    WHEELING_IL = "wheeling_il".freeze

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      constantValues = SmartPostHub.constants.select { |c| SmartPostHub::const_get(c) == value }
      raise "Invalid ENUM value #{value} for class #SmartPostHub" if constantValues.empty?
      value
    end
  end
end
