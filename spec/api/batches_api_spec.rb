=begin
#ShipEngine API

#ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics. Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 

The version of the OpenAPI document: 1.1.202006302006
Contact: sales@shipengine.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for ShipEngine::BatchesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'BatchesApi' do
  before do
    # run before each test
    @api_instance = ShipEngine::BatchesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BatchesApi' do
    it 'should create an instance of BatchesApi' do
      expect(@api_instance).to be_instance_of(ShipEngine::BatchesApi)
    end
  end

  # unit tests for add_to_batch
  # Add to a Batch
  # Add a Shipment or Rate to a Batch
  # @param batch_id Batch ID
  # @param add_to_batch_request_body 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'add_to_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_batch
  # Create A Batch
  # Create a Batch
  # @param create_batch_request_body 
  # @param [Hash] opts the optional parameters
  # @return [CreateBatchResponseBody]
  describe 'create_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_batch
  # Delete Batch By Id
  # Delete Batch By Id
  # @param batch_id Batch ID
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'delete_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_batch_by_external_id
  # Get Batch By External ID
  # Get Batch By External ID
  # @param external_batch_id 
  # @param [Hash] opts the optional parameters
  # @return [GetBatchByExternalIdResponseBody]
  describe 'get_batch_by_external_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_batch_by_id
  # Get Batch By ID
  # Get Batch By ID
  # @param batch_id Batch ID
  # @param [Hash] opts the optional parameters
  # @return [GetBatchByIdResponseBody]
  describe 'get_batch_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_batch_errors
  # Get Batch Errors
  # Error handling in batches are handled differently than in a single synchronous request. You must retrieve the status of your batch by [getting a batch](https://www.shipengine.com/docs/reference/get-batch-by-id/) and getting an overview of the statuses or you can list errors directly here below to get detailed information about the errors. 
  # @param batch_id Batch ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Return a specific page of results. Defaults to the first page. If set to a number that&#39;s greater than the number of pages of results, an empty page is returned. 
  # @option opts [Integer] :pagesize 
  # @return [ListBatchErrorsResponseBody]
  describe 'list_batch_errors test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_batches
  # List Batches
  # List Batches associated with your Shipengine account
  # @param [Hash] opts the optional parameters
  # @option opts [BatchStatus] :status 
  # @option opts [Integer] :page Return a specific page of results. Defaults to the first page. If set to a number that&#39;s greater than the number of pages of results, an empty page is returned. 
  # @option opts [Integer] :page_size The number of results to return per response.
  # @option opts [SortDir] :sort_dir Controls the sort order of the query.
  # @option opts [BatchesSortBy] :sort_by 
  # @return [ListBatchesResponseBody]
  describe 'list_batches test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for process_batch
  # Process Batch ID Labels
  # Process Batch ID Labels
  # @param batch_id Batch ID
  # @param process_batch_request_body 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'process_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_from_batch
  # Remove From Batch
  # Remove a shipment or rate from a batch
  # @param batch_id Batch ID
  # @param remove_from_batch_request_body 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'remove_from_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_batch
  # Update Batch By Id
  # Update Batch By Id
  # @param batch_id Batch ID
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'update_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
