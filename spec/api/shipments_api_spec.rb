=begin
#ShipEngine API

#ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics. Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 

The version of the OpenAPI document: 1.1.202006302006
Contact: sales@shipengine.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for ShipEngine::ShipmentsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ShipmentsApi' do
  before do
    # run before each test
    @api_instance = ShipEngine::ShipmentsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ShipmentsApi' do
    it 'should create an instance of ShipmentsApi' do
      expect(@api_instance).to be_instance_of(ShipEngine::ShipmentsApi)
    end
  end

  # unit tests for cancel_shipments
  # Cancel a Shipment
  # Mark a shipment cancelled, if it is no longer needed or being used by your organized. Any label associated with the shipment needs to be voided first An example use case would be if a batch label creation job is going to run at a set time and only queries &#x60;pending&#x60; shipments. Marking a shipment as cancelled would remove it from this process 
  # @param shipment_id Shipment ID
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'cancel_shipments test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_shipments
  # Create Shipments
  # Create one or multiple shipments.
  # @param create_shipments_request_body 
  # @param [Hash] opts the optional parameters
  # @return [CreateShipmentsResponseBody]
  describe 'create_shipments test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_shipment_by_external_id
  # Get Shipment By External ID
  # Query Shipments created using your own custom ID convention using this endpint
  # @param external_shipment_id 
  # @param [Hash] opts the optional parameters
  # @return [GetShipmentByExternalIdResponseBody]
  describe 'get_shipment_by_external_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_shipment_by_id
  # Get Shipment By ID
  # Get an individual shipment based on its ID
  # @param shipment_id Shipment ID
  # @param [Hash] opts the optional parameters
  # @return [GetShipmentByIdResponseBody]
  describe 'get_shipment_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_shipment_errors
  # Get Shipment Errors
  # If there are no errors associated with this shipment then the API will return a 404 Not Found response to indicate that no errors are associated with the request 
  # @param shipment_id Shipment ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Return a specific page of results. Defaults to the first page. If set to a number that&#39;s greater than the number of pages of results, an empty page is returned. 
  # @option opts [Integer] :pagesize 
  # @return [ListShipmentErrorsResponseBody]
  describe 'list_shipment_errors test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_shipment_rates
  # Get Shipment Rates
  # Get Rates for the shipment information associated with the shipment ID
  # @param shipment_id Shipment ID
  # @param [Hash] opts the optional parameters
  # @option opts [DateTime] :created_at_start Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)
  # @return [ListShipmentRatesResponseBody]
  describe 'list_shipment_rates test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_shipments
  # List Shipments
  # Get list of Shipments
  # @param [Hash] opts the optional parameters
  # @option opts [ShipmentStatus] :shipment_status 
  # @option opts [String] :batch_id Batch ID
  # @option opts [String] :tag Search for shipments based on the custom tag added to the shipment object
  # @option opts [DateTime] :created_at_start Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)
  # @option opts [DateTime] :created_at_end Used to create a filter for when a resource was created, (ex. A shipment that was created before a certain time)
  # @option opts [DateTime] :modified_at_start Used to create a filter for when a resource was modified (ex. A shipment that was modified after a certain time)
  # @option opts [DateTime] :modified_at_end Used to create a filter for when a resource was modified (ex. A shipment that was modified before a certain time)
  # @option opts [Integer] :page Return a specific page of results. Defaults to the first page. If set to a number that&#39;s greater than the number of pages of results, an empty page is returned. 
  # @option opts [Integer] :page_size The number of results to return per response.
  # @option opts [String] :sales_order_id Sales Order ID
  # @option opts [SortDir] :sort_dir Controls the sort order of the query.
  # @option opts [ShipmentsSortBy] :sort_by 
  # @return [ListShipmentsResponseBody]
  describe 'list_shipments test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for parse_shipment
  # Parse shipping info
  # The shipment-recognition API makes it easy for you to extract shipping data from unstructured text, including people&#39;s names, addresses, package weights and dimensions, insurance and delivery requirements, and more.  Data often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine&#39;s shipment-recognition API helps you extract meaningful, structured data from this unstructured text. The parsed shipment data is returned in the same structure that&#39;s used for other ShipEngine APIs, so you can easily use the parsed data to create a shipping label.  &gt; **Note:** Shipment recognition is currently supported for the United States, Canada, Australia, New Zealand, the United Kingdom, and Ireland. 
  # @param parse_shipment_request_body The only required field is &#x60;text&#x60;, which is the text to be parsed. You can optionally also provide a &#x60;shipment&#x60; containing any already-known values. For example, you probably already know the &#x60;ship_from&#x60; address, and you may also already know what carrier and service you want to use. 
  # @param [Hash] opts the optional parameters
  # @return [ParseShipmentResponseBody]
  describe 'parse_shipment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tag_shipment
  # Add Tag to Shipment
  # Add a tag to the shipment object
  # @param shipment_id Shipment ID
  # @param tag_name 
  # @param [Hash] opts the optional parameters
  # @return [TagShipmentResponseBody]
  describe 'tag_shipment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for untag_shipment
  # Remove Tag from Shipment
  # Remove an existing tag from the Shipment object
  # @param shipment_id Shipment ID
  # @param tag_name 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'untag_shipment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_shipment
  # Update Shipment By ID
  # Update a shipment object based on its ID
  # @param shipment_id Shipment ID
  # @param update_shipment_request_body 
  # @param [Hash] opts the optional parameters
  # @return [UpdateShipmentResponseBody]
  describe 'update_shipment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
